---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import Blog from "../blog.astro";
import { getCollection } from "astro:content";
/**
 *
 */

export async function getStaticPaths() {
  // const allPosts = Object.values(
  //   import.meta.glob("../posts/*.md", { eager: true })
  // );
  const allPosts = await getCollection("blog");

  /**
   * Create an array of all your existing tags using Astroâ€™s built-in TypeScript support.
   * Add the following code to provide you with a list of every tag used in your blog posts.
   */
  /**
   * It goes through each Markdown post, one by one, and combines each array of tags into one single larger array. Then, it makes a new Set from all the individual tags it found (to ignore repeated values). Finally, it turns that set into an array (with no duplications), that you can use to show a list of tags on your page.
   */
  const uniqueTags = [
    // ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
    ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  //   return [
  //     { params: { tag: "astro" }, props: { posts: allPosts } },
  //     { params: { tag: "successes" }, props: { posts: allPosts } },
  //     { params: { tag: "community" }, props: { posts: allPosts } },
  //     { params: { tag: "blogging" }, props: { posts: allPosts } },
  //     { params: { tag: "setbacks" }, props: { posts: allPosts } },
  //     { params: { tag: "learning in public" }, props: { posts: allPosts } },
  //   ];
  return uniqueTags.map((tag) => {
    // const filteredPosts = allPosts.filter((post: any) =>
    //   post.frontmatter.tags.includes(tag)
    // );
    const filteredPosts = allPosts.filter((post: any) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((posts: any) =>
//   posts.frontmatter.tags?.includes(tag)
// );
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    <!-- {
      filteredPosts.map((post: any) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    } -->
    <!-- {
      filteredPosts.map((post: any) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    } -->
    {
      posts.map((post: any) => (
        // <BlogPost url={post.url} title={post.frontmatter.title} />
        <BlogPost url={`/posts/${post.id}`} title={post.data.title} />
      ))
    }
  </ul>
</BaseLayout>
